ellipsis()
  overflow hidden
  white-space no-wrap
  text-overflow ellipsis

content-padding()
  padding 0 15px

gradient-fill($one, $two)
  background radial-gradient(circle at top right, $one, $two)

primary-gradient-fill()
  // This is used as a fallback for older browsers (I'm using this
  // mixin for backgrounds and gradient text â€“ that needs to change)
  color #c7236c
  gradient-fill(#f5582e, #8000d4)

clip-bg-to-text()
  -webkit-background-clip text
  -webkit-text-fill-color transparent

noselect()
  -webkit-touch-callout none
  -webkit-user-select none
  -khtml-user-select none
  -moz-user-select none
  -ms-user-select none
  user-select none

placeholder-color($color)
  &::-webkit-input-placeholder
     color $color

  &:-moz-placeholder /* Firefox 18- */
     color $color

  &::-moz-placeholder  /* Firefox 19+ */
     color $color

  &:-ms-input-placeholder
     color $color

// `$width` must be a predefined variable defined in `variables.styl`.
// This is a block mixin. To use it, prefix it with `+`. i.e.:
// `+respond-to($s-screen-max)`
respond-to($width)
  if $lg-screen is $width
    media = 'all and (min-width: %s)' % $width
    @media media
      {block}
  else
    media = 'all and (max-width: %s)' % $width
    @media media
      {block}

// `$width` must be a predefined variable defined in `variables.styl`.
// This is a block mixin. To use it, prefix it with `+`. i.e.:
// `+respond-from($l-screen-min)`
respond-from($width)
  media = 'all and (min-width: %s)' % $width
  @media media
    {block}

// `$width` must be a predefined variable defined in `variables.styl`.
// This is a block mixin. To use it, prefix it with `+`. i.e.:
// `+respond-as($l-screen)`
respond-as($width)
  if $width is $l-screen
    media = 'all and (min-width: %s)' % $l-screen-min
    @media media
      {block}
  if $width is $m-screen
    media = '(min-width: %s) and (max-width: %s)' % ($m-screen-min $m-screen-max)
    @media media
      {block}
  if $width is $s-screen
    media = 'all and (max-width: %s)' % $s-screen-max
    @media media
      {block}
